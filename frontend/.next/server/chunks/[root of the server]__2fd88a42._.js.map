{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user/Desktop/paw/frontend/src/app/api/login/route.ts"],"sourcesContent":["// File: app/api/login/route.ts\r\nimport { NextResponse } from 'next/server';\r\nimport jwt from 'jsonwebtoken';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst tokenSecret = process.env.TOKEN_SECRET || 'super-tajny-klucz-do-zmiany';\r\nconst tokenExpiration = 60 * 15; // 15 minutes\r\nconst refreshTokenExpiration = 60 * 60 * 24 * 7; // 7 days\r\n\r\ninterface User {\r\n  id: string;\r\n  login: string;\r\n  password: string; \r\n  email: string;\r\n  name: string;\r\n  role: string;\r\n}\r\n\r\nconst users: User[] = [\r\n  {\r\n    id: '1',\r\n    login: 'admin',\r\n    password: 'admin123',\r\n    email: 'admin@example.com',\r\n    name: 'admin',\r\n    role: 'admin'\r\n  },\r\n  {\r\n    id: '2',\r\n    login: 'user',\r\n    password: 'user123',\r\n    email: 'user@example.com',\r\n    name: 'user',\r\n    role: 'user'\r\n  }\r\n];\r\n\r\nlet refreshTokens: { [userId: string]: string } = {};\r\n\r\nexport async function POST(request: Request) {\r\n  try {\r\n    const body = await request.json();\r\n    const { login, password } = body;\r\n    \r\n    if (!login || !password) {\r\n      return NextResponse.json(\r\n        { message: 'Login i hasło są wymagane' }, \r\n        { status: 400 }\r\n      );\r\n    }\r\n    \r\n    const user = users.find(u => u.login === login && u.password === password);\r\n    \r\n    if (!user) {\r\n      return NextResponse.json(\r\n        { message: 'Niepoprawny login lub hasło' }, \r\n        { status: 401 }\r\n      );\r\n    }\r\n    \r\n    const token = generateAccessToken(user);\r\n    const refreshToken = generateRefreshToken(user.id);\r\n    \r\n    refreshTokens[user.id] = refreshToken;\r\n    \r\n    const { password: _, ...userWithoutPassword } = user;\r\n    \r\n    return NextResponse.json({\r\n      token,\r\n      refreshToken,\r\n      user: userWithoutPassword\r\n    });\r\n  } catch (error) {\r\n    console.error('Login error:', error);\r\n    return NextResponse.json(\r\n      { message: 'Internal server error' }, \r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\nfunction generateAccessToken(user: User) {\r\n  const payload = {\r\n    id: user.id,\r\n    login: user.login,\r\n    role: user.role\r\n  };\r\n  \r\n  return jwt.sign(payload, tokenSecret, { \r\n    expiresIn: tokenExpiration,\r\n    algorithm: 'HS256'\r\n  });\r\n}\r\n\r\nfunction generateRefreshToken(userId: string) {\r\n  const payload = {\r\n    userId,\r\n    tokenId: uuidv4()\r\n  };\r\n  \r\n  return jwt.sign(payload, tokenSecret, { \r\n    expiresIn: refreshTokenExpiration,\r\n    algorithm: 'HS256'\r\n  });\r\n}"],"names":[],"mappings":"AAAA,+BAA+B;;;;AAC/B;AACA;AACA;;;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,YAAY,IAAI;AAChD,MAAM,kBAAkB,KAAK,IAAI,aAAa;AAC9C,MAAM,yBAAyB,KAAK,KAAK,KAAK,GAAG,SAAS;AAW1D,MAAM,QAAgB;IACpB;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,OAAO;QACP,MAAM;QACN,MAAM;IACR;IACA;QACE,IAAI;QACJ,OAAO;QACP,UAAU;QACV,OAAO;QACP,MAAM;QACN,MAAM;IACR;CACD;AAED,IAAI,gBAA8C,CAAC;AAE5C,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG;QAE5B,IAAI,CAAC,SAAS,CAAC,UAAU;YACvB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;YAA4B,GACvC;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,OAAO,MAAM,IAAI,CAAC,CAAA,IAAK,EAAE,KAAK,KAAK,SAAS,EAAE,QAAQ,KAAK;QAEjE,IAAI,CAAC,MAAM;YACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;YAA8B,GACzC;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,QAAQ,oBAAoB;QAClC,MAAM,eAAe,qBAAqB,KAAK,EAAE;QAEjD,aAAa,CAAC,KAAK,EAAE,CAAC,GAAG;QAEzB,MAAM,EAAE,UAAU,CAAC,EAAE,GAAG,qBAAqB,GAAG;QAEhD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB;YACA;YACA,MAAM;QACR;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gBAAgB;QAC9B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;QAAwB,GACnC;YAAE,QAAQ;QAAI;IAElB;AACF;AAEA,SAAS,oBAAoB,IAAU;IACrC,MAAM,UAAU;QACd,IAAI,KAAK,EAAE;QACX,OAAO,KAAK,KAAK;QACjB,MAAM,KAAK,IAAI;IACjB;IAEA,OAAO,uIAAA,CAAA,UAAG,CAAC,IAAI,CAAC,SAAS,aAAa;QACpC,WAAW;QACX,WAAW;IACb;AACF;AAEA,SAAS,qBAAqB,MAAc;IAC1C,MAAM,UAAU;QACd;QACA,SAAS,CAAA,GAAA,4KAAA,CAAA,KAAM,AAAD;IAChB;IAEA,OAAO,uIAAA,CAAA,UAAG,CAAC,IAAI,CAAC,SAAS,aAAa;QACpC,WAAW;QACX,WAAW;IACb;AACF","debugId":null}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}