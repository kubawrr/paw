{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user/Desktop/paw/src/app/context/AuthContext.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { createContext, useState, useContext, useEffect, ReactNode } from 'react';\r\n\r\ninterface User {\r\n  id: string;\r\n  login: string;\r\n  name: string;\r\n  email: string;\r\n  role: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  isAuthenticated: boolean;\r\n  login: (user: User) => void;\r\n  logout: () => void;\r\n  checkAuthStatus: () => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType>({\r\n  user: null,\r\n  isAuthenticated: false,\r\n  login: () => {},\r\n  logout: () => {},\r\n  checkAuthStatus: () => {},\r\n});\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport function AuthProvider({ children }: AuthProviderProps) {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const login = (userData: User) => {\r\n    setUser(userData);\r\n    setIsAuthenticated(true);\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('refreshToken');\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  const checkAuthStatus = () => {\r\n    setIsLoading(true);\r\n    \r\n    // Only run on client-side\r\n    if (typeof window === 'undefined') {\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n    \r\n    const token = localStorage.getItem('token');\r\n    const userString = localStorage.getItem('user');\r\n    \r\n    if (token && userString) {\r\n      try {\r\n        const userData = JSON.parse(userString);\r\n        setUser(userData);\r\n        setIsAuthenticated(true);\r\n      } catch (error) {\r\n        console.error('Error parsing user data:', error);\r\n        logout();\r\n      }\r\n    } else {\r\n      setIsAuthenticated(false);\r\n    }\r\n    \r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        isAuthenticated,\r\n        login,\r\n        logout,\r\n        checkAuthStatus,\r\n      }}\r\n    >\r\n      {!isLoading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAoBA,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAmB;IACjD,MAAM;IACN,iBAAiB;IACjB,OAAO,KAAO;IACd,QAAQ,KAAO;IACf,iBAAiB,KAAO;AAC1B;AAEO,MAAM,UAAU,IAAM,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;AAMjC,SAAS,aAAa,EAAE,QAAQ,EAAqB;IAC1D,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,MAAM,QAAQ,CAAC;QACb,QAAQ;QACR,mBAAmB;IACrB;IAEA,MAAM,SAAS;QACb,aAAa,UAAU,CAAC;QACxB,aAAa,UAAU,CAAC;QACxB,aAAa,UAAU,CAAC;QACxB,QAAQ;QACR,mBAAmB;IACrB;IAEA,MAAM,kBAAkB;QACtB,aAAa;QAEb,0BAA0B;QAC1B,wCAAmC;YACjC,aAAa;YACb;QACF;;QAEA,MAAM;QACN,MAAM;IAgBR;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG,EAAE;IAEL,qBACE,8OAAC,YAAY,QAAQ;QACnB,OAAO;YACL;YACA;YACA;YACA;YACA;QACF;kBAEC,CAAC,aAAa;;;;;;AAGrB","debugId":null}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user/Desktop/paw/src/app/components/Navbar.tsx"],"sourcesContent":["'use client';\r\n\r\nimport Link from 'next/link';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { useState } from 'react';\r\nimport { usePathname, useRouter } from 'next/navigation';\r\n\r\nexport default function Navbar() {\r\n  const { isAuthenticated, logout, user } = useAuth();\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n  const pathname = usePathname();\r\n  const router = useRouter();\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    router.push('/login');\r\n  };\r\n\r\n  return (\r\n    <nav className=\"bg-gray-800 text-white p-4\">\r\n      <div className=\"container mx-auto flex justify-between items-center\">\r\n        <div className=\"font-bold text-xl\">\r\n          <Link href=\"/\" className=\"hover:text-blue-300\">\r\n            Project Manager\r\n          </Link>\r\n        </div>\r\n        \r\n        <div className=\"hidden md:flex space-x-4\">\r\n          {isAuthenticated ? (\r\n            <>\r\n              <Link href=\"/historyjki\" className={`hover:text-blue-300 ${pathname === '/historyjki' ? 'text-blue-300' : ''}`}>\r\n                Historyjki\r\n              </Link>\r\n              <Link href=\"/projekty\" className={`hover:text-blue-300 ${pathname === '/projekty' ? 'text-blue-300' : ''}`}>\r\n                Projekty\r\n              </Link>\r\n              <Link href=\"/zadania\" className={`hover:text-blue-300 ${pathname === '/zadania' ? 'text-blue-300' : ''}`}>\r\n                Zadania\r\n              </Link>\r\n              <div className=\"relative group\">\r\n                <button className=\"hover:text-blue-300 flex items-center\">\r\n                  {user?.name || user?.login}\r\n                  <svg \r\n                    className=\"w-4 h-4 ml-1\" \r\n                    fill=\"none\" \r\n                    stroke=\"currentColor\" \r\n                    viewBox=\"0 0 24 24\" \r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\r\n                  </svg>\r\n                </button>\r\n                <div className=\"absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg py-1 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-300 z-50\">\r\n                  <Link href=\"/profile\" className=\"block px-4 py-2 text-gray-800 hover:bg-gray-100\">\r\n                    Profil\r\n                  </Link>\r\n                  <button \r\n                    onClick={handleLogout} \r\n                    className=\"block w-full text-left px-4 py-2 text-gray-800 hover:bg-gray-100\"\r\n                  >\r\n                    Wyloguj\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <Link href=\"/login\" className={`hover:text-blue-300 ${pathname === '/login' ? 'text-blue-300' : ''}`}>\r\n              Logowanie\r\n            </Link>\r\n          )}\r\n        </div>\r\n        \r\n        {/* Mobile menu button */}\r\n        <div className=\"md:hidden\">\r\n          <button \r\n            onClick={() => setIsMenuOpen(!isMenuOpen)}\r\n            className=\"focus:outline-none\"\r\n          >\r\n            <svg \r\n              className=\"w-6 h-6\" \r\n              fill=\"none\" \r\n              stroke=\"currentColor\" \r\n              viewBox=\"0 0 24 24\" \r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              {isMenuOpen ? (\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n              ) : (\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\r\n              )}\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Mobile menu */}\r\n      {isMenuOpen && (\r\n        <div className=\"md:hidden mt-2 pt-2 border-t border-gray-700\">\r\n          {isAuthenticated ? (\r\n            <>\r\n              <Link \r\n                href=\"/historyjki\" \r\n                className={`block py-2 hover:text-blue-300 ${pathname === '/historyjki' ? 'text-blue-300' : ''}`}\r\n                onClick={() => setIsMenuOpen(false)}\r\n              >\r\n                Historyjki\r\n              </Link>\r\n              <Link \r\n                href=\"/projekty\" \r\n                className={`block py-2 hover:text-blue-300 ${pathname === '/projekty' ? 'text-blue-300' : ''}`}\r\n                onClick={() => setIsMenuOpen(false)}\r\n              >\r\n                Projekty\r\n              </Link>\r\n              <Link \r\n                href=\"/zadania\" \r\n                className={`block py-2 hover:text-blue-300 ${pathname === '/zadania' ? 'text-blue-300' : ''}`}\r\n                onClick={() => setIsMenuOpen(false)}\r\n              >\r\n                Zadania\r\n              </Link>\r\n              <Link \r\n                href=\"/profile\" \r\n                className={`block py-2 hover:text-blue-300 ${pathname === '/profile' ? 'text-blue-300' : ''}`}\r\n                onClick={() => setIsMenuOpen(false)}\r\n              >\r\n                Profil\r\n              </Link>\r\n              <button \r\n                onClick={() => {\r\n                  handleLogout();\r\n                  setIsMenuOpen(false);\r\n                }} \r\n                className=\"block w-full text-left py-2 hover:text-blue-300\"\r\n              >\r\n                Wyloguj\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <Link \r\n              href=\"/login\" \r\n              className={`block py-2 hover:text-blue-300 ${pathname === '/login' ? 'text-blue-300' : ''}`}\r\n              onClick={() => setIsMenuOpen(false)}\r\n            >\r\n              Logowanie\r\n            </Link>\r\n          )}\r\n        </div>\r\n      )}\r\n    </nav>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 394, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}