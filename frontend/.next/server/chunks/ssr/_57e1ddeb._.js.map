{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user/Desktop/paw/src/app/types/Task.ts"],"sourcesContent":["import { UserStory } from './UserStory';\r\n\r\nexport enum TaskPriority {\r\n  LOW = 'low',\r\n  MEDIUM = 'medium',\r\n  HIGH = 'high'\r\n}\r\n\r\nexport enum TaskState {\r\n  TODO = 'todo',\r\n  DOING = 'doing',\r\n  DONE = 'done'\r\n}\r\n\r\nexport enum UserRole {\r\n  DEVELOPER = 'developer',\r\n  DEVOPS = 'devops'\r\n}\r\n\r\nexport interface Task {\r\n  id?: string;\r\n  name: string;\r\n  description: string;\r\n  priority: TaskPriority;\r\n  userStoryId: string;\r\n  estimatedTime: number; // in hours\r\n  state: TaskState;\r\n  dateAdded: Date;\r\n  dateStarted?: Date;\r\n  dateCompleted?: Date;\r\n  assignedUser?: {\r\n    id: string;\r\n    name: string;\r\n    role: UserRole;\r\n  };\r\n}"],"names":[],"mappings":";;;;;AAEO,IAAA,AAAK,sCAAA;;;;WAAA;;AAML,IAAA,AAAK,mCAAA;;;;WAAA;;AAML,IAAA,AAAK,kCAAA;;;WAAA","debugId":null}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user/Desktop/paw/src/app/services/TaskService.ts"],"sourcesContent":["import { Task, TaskState, UserRole } from '../types/Task';\r\n\r\nclass TaskService {\r\n  private tasks: Task[] = [];\r\n\r\n  getAllTasks(): Task[] {\r\n    return this.tasks;\r\n  }\r\n\r\n  getTaskById(id: string): Task | undefined {\r\n    return this.tasks.find(task => task.id === id);\r\n  }\r\n\r\n  addTask(task: Task): void {\r\n    if (!task.id) {\r\n      task.id = this.generateId();\r\n      task.dateAdded = new Date();\r\n    }\r\n\r\n    const index = this.tasks.findIndex(t => t.id === task.id);\r\n    if (index !== -1) {\r\n      // Update existing task\r\n      this.tasks[index] = { ...task };\r\n    } else {\r\n      // Add new task\r\n      this.tasks.push(task);\r\n    }\r\n\r\n    this.saveToLocalStorage();\r\n  }\r\n\r\n  deleteTask(id: string): void {\r\n    this.tasks = this.tasks.filter(task => task.id !== id);\r\n    this.saveToLocalStorage();\r\n  }\r\n\r\n  assignUserToTask(taskId: string, user: { id: string, name: string, role: UserRole }): void {\r\n    const task = this.tasks.find(t => t.id === taskId);\r\n    if (task && task.state === TaskState.TODO) {\r\n      task.assignedUser = user;\r\n      task.state = TaskState.DOING;\r\n      task.dateStarted = new Date();\r\n      this.saveToLocalStorage();\r\n    }\r\n  }\r\n\r\n  completeTask(taskId: string): void {\r\n    const task = this.tasks.find(t => t.id === taskId);\r\n    if (task && task.state === TaskState.DOING && task.assignedUser) {\r\n      task.state = TaskState.DONE;\r\n      task.dateCompleted = new Date();\r\n      this.saveToLocalStorage();\r\n    }\r\n  }\r\n\r\n  getTasksByState(state: TaskState): Task[] {\r\n    return this.tasks.filter(task => task.state === state);\r\n  }\r\n\r\n  private generateId(): string {\r\n    return Math.random().toString(36).substr(2, 9);\r\n  }\r\n\r\n  private saveToLocalStorage(): void {\r\n    if (typeof window !== 'undefined') {\r\n      localStorage.setItem('tasks', JSON.stringify(this.tasks));\r\n    }\r\n  }\r\n\r\n  private loadFromLocalStorage(): void {\r\n    if (typeof window !== 'undefined') {\r\n      const storedTasks = localStorage.getItem('tasks');\r\n      if (storedTasks) {\r\n        this.tasks = JSON.parse(storedTasks).map((task: Task) => ({\r\n          ...task,\r\n          dateAdded: new Date(task.dateAdded),\r\n          dateStarted: task.dateStarted ? new Date(task.dateStarted) : undefined,\r\n          dateCompleted: task.dateCompleted ? new Date(task.dateCompleted) : undefined,\r\n        }));\r\n      }\r\n    }\r\n  }\r\n\r\n  constructor() {\r\n    this.loadFromLocalStorage();\r\n  }\r\n}\r\n\r\nexport const taskService = new TaskService();\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM;IACI,QAAgB,EAAE,CAAC;IAE3B,cAAsB;QACpB,OAAO,IAAI,CAAC,KAAK;IACnB;IAEA,YAAY,EAAU,EAAoB;QACxC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK;IAC7C;IAEA,QAAQ,IAAU,EAAQ;QACxB,IAAI,CAAC,KAAK,EAAE,EAAE;YACZ,KAAK,EAAE,GAAG,IAAI,CAAC,UAAU;YACzB,KAAK,SAAS,GAAG,IAAI;QACvB;QAEA,MAAM,QAAQ,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,KAAK,EAAE;QACxD,IAAI,UAAU,CAAC,GAAG;YAChB,uBAAuB;YACvB,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG;gBAAE,GAAG,IAAI;YAAC;QAChC,OAAO;YACL,eAAe;YACf,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QAClB;QAEA,IAAI,CAAC,kBAAkB;IACzB;IAEA,WAAW,EAAU,EAAQ;QAC3B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK;QACnD,IAAI,CAAC,kBAAkB;IACzB;IAEA,iBAAiB,MAAc,EAAE,IAAkD,EAAQ;QACzF,MAAM,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;QAC3C,IAAI,QAAQ,KAAK,KAAK,KAAK,2HAAA,CAAA,YAAS,CAAC,IAAI,EAAE;YACzC,KAAK,YAAY,GAAG;YACpB,KAAK,KAAK,GAAG,2HAAA,CAAA,YAAS,CAAC,KAAK;YAC5B,KAAK,WAAW,GAAG,IAAI;YACvB,IAAI,CAAC,kBAAkB;QACzB;IACF;IAEA,aAAa,MAAc,EAAQ;QACjC,MAAM,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;QAC3C,IAAI,QAAQ,KAAK,KAAK,KAAK,2HAAA,CAAA,YAAS,CAAC,KAAK,IAAI,KAAK,YAAY,EAAE;YAC/D,KAAK,KAAK,GAAG,2HAAA,CAAA,YAAS,CAAC,IAAI;YAC3B,KAAK,aAAa,GAAG,IAAI;YACzB,IAAI,CAAC,kBAAkB;QACzB;IACF;IAEA,gBAAgB,KAAgB,EAAU;QACxC,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA,OAAQ,KAAK,KAAK,KAAK;IAClD;IAEQ,aAAqB;QAC3B,OAAO,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,MAAM,CAAC,GAAG;IAC9C;IAEQ,qBAA2B;QACjC,uCAAmC;;QAEnC;IACF;IAEQ,uBAA6B;QACnC,uCAAmC;;QAUnC;IACF;IAEA,aAAc;QACZ,IAAI,CAAC,oBAAoB;IAC3B;AACF;AAEO,MAAM,cAAc,IAAI","debugId":null}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user/Desktop/paw/src/app/services/UserStoryService.ts"],"sourcesContent":["import { UserStory, CreateUserStoryDTO, UpdateUserStoryDTO } from '../types/UserStory';\r\n\r\nexport class UserStoryService {\r\n  private storageKey = 'userStories';\r\n\r\n  constructor() {\r\n    if (typeof window !== 'undefined') {\r\n      this.initializeStorage();\r\n    }\r\n  }\r\n\r\n  private initializeStorage(): void {\r\n    if (!localStorage.getItem(this.storageKey)) {\r\n      localStorage.setItem(this.storageKey, JSON.stringify([]));\r\n    }\r\n  }\r\n\r\n  getAllStories(): UserStory[] {\r\n    try {\r\n      if (typeof window === 'undefined') return [];\r\n      return JSON.parse(localStorage.getItem(this.storageKey) || '[]');\r\n    } catch (error) {\r\n      console.error('Error getting stories:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  getStoriesByState(state: UserStory['state']): UserStory[] {\r\n    const stories = this.getAllStories();\r\n    return stories.filter(story => story.state === state);\r\n  }\r\n\r\n  getStoriesByProject(projectId: string): UserStory[] {\r\n    const stories = this.getAllStories();\r\n    return stories.filter(story => story.project === projectId);\r\n  }\r\n\r\n  getStoryById(id: string): UserStory | null {\r\n    const stories = this.getAllStories();\r\n    return stories.find(story => story.id === id) || null;\r\n  }\r\n\r\n  createStory(storyData: CreateUserStoryDTO): UserStory | null {\r\n    try {\r\n      const stories = this.getAllStories();\r\n      const newStory: UserStory = {\r\n        ...storyData,\r\n        id: this.generateId(),\r\n        dateCreated: new Date().toISOString(),\r\n      };\r\n      \r\n      stories.push(newStory);\r\n      localStorage.setItem(this.storageKey, JSON.stringify(stories));\r\n      return newStory;\r\n    } catch (error) {\r\n      console.error('Error creating story:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  updateStory(id: string, storyData: UpdateUserStoryDTO): UserStory | null {\r\n    try {\r\n      const stories = this.getAllStories();\r\n      const index = stories.findIndex(story => story.id === id);\r\n      \r\n      if (index === -1) {\r\n        return null;\r\n      }\r\n      \r\n      const updatedStory = {\r\n        ...stories[index],\r\n        ...storyData,\r\n      };\r\n      \r\n      stories[index] = updatedStory;\r\n      localStorage.setItem(this.storageKey, JSON.stringify(stories));\r\n      return updatedStory;\r\n    } catch (error) {\r\n      console.error('Error updating story:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  deleteStory(id: string): boolean {\r\n    try {\r\n      const stories = this.getAllStories();\r\n      const filteredStories = stories.filter(story => story.id !== id);\r\n      \r\n      if (filteredStories.length === stories.length) {\r\n        return false; // Nothing was deleted\r\n      }\r\n      \r\n      localStorage.setItem(this.storageKey, JSON.stringify(filteredStories));\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Error deleting story:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private generateId(): string {\r\n    return Date.now().toString(36) + Math.random().toString(36).substring(2, 5);\r\n  }\r\n}\r\n\r\n// Create a singleton instance\r\nexport const userStoryService = new UserStoryService();"],"names":[],"mappings":";;;;AAEO,MAAM;IACH,aAAa,cAAc;IAEnC,aAAc;QACZ,uCAAmC;;QAEnC;IACF;IAEQ,oBAA0B;QAChC,IAAI,CAAC,aAAa,OAAO,CAAC,IAAI,CAAC,UAAU,GAAG;YAC1C,aAAa,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,SAAS,CAAC,EAAE;QACzD;IACF;IAEA,gBAA6B;QAC3B,IAAI;YACF,wCAAmC,OAAO,EAAE;;QAE9C,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0BAA0B;YACxC,OAAO,EAAE;QACX;IACF;IAEA,kBAAkB,KAAyB,EAAe;QACxD,MAAM,UAAU,IAAI,CAAC,aAAa;QAClC,OAAO,QAAQ,MAAM,CAAC,CAAA,QAAS,MAAM,KAAK,KAAK;IACjD;IAEA,oBAAoB,SAAiB,EAAe;QAClD,MAAM,UAAU,IAAI,CAAC,aAAa;QAClC,OAAO,QAAQ,MAAM,CAAC,CAAA,QAAS,MAAM,OAAO,KAAK;IACnD;IAEA,aAAa,EAAU,EAAoB;QACzC,MAAM,UAAU,IAAI,CAAC,aAAa;QAClC,OAAO,QAAQ,IAAI,CAAC,CAAA,QAAS,MAAM,EAAE,KAAK,OAAO;IACnD;IAEA,YAAY,SAA6B,EAAoB;QAC3D,IAAI;YACF,MAAM,UAAU,IAAI,CAAC,aAAa;YAClC,MAAM,WAAsB;gBAC1B,GAAG,SAAS;gBACZ,IAAI,IAAI,CAAC,UAAU;gBACnB,aAAa,IAAI,OAAO,WAAW;YACrC;YAEA,QAAQ,IAAI,CAAC;YACb,aAAa,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,SAAS,CAAC;YACrD,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,yBAAyB;YACvC,OAAO;QACT;IACF;IAEA,YAAY,EAAU,EAAE,SAA6B,EAAoB;QACvE,IAAI;YACF,MAAM,UAAU,IAAI,CAAC,aAAa;YAClC,MAAM,QAAQ,QAAQ,SAAS,CAAC,CAAA,QAAS,MAAM,EAAE,KAAK;YAEtD,IAAI,UAAU,CAAC,GAAG;gBAChB,OAAO;YACT;YAEA,MAAM,eAAe;gBACnB,GAAG,OAAO,CAAC,MAAM;gBACjB,GAAG,SAAS;YACd;YAEA,OAAO,CAAC,MAAM,GAAG;YACjB,aAAa,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,SAAS,CAAC;YACrD,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,yBAAyB;YACvC,OAAO;QACT;IACF;IAEA,YAAY,EAAU,EAAW;QAC/B,IAAI;YACF,MAAM,UAAU,IAAI,CAAC,aAAa;YAClC,MAAM,kBAAkB,QAAQ,MAAM,CAAC,CAAA,QAAS,MAAM,EAAE,KAAK;YAE7D,IAAI,gBAAgB,MAAM,KAAK,QAAQ,MAAM,EAAE;gBAC7C,OAAO,OAAO,sBAAsB;YACtC;YAEA,aAAa,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,SAAS,CAAC;YACrD,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,yBAAyB;YACvC,OAAO;QACT;IACF;IAEQ,aAAqB;QAC3B,OAAO,KAAK,GAAG,GAAG,QAAQ,CAAC,MAAM,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,SAAS,CAAC,GAAG;IAC3E;AACF;AAGO,MAAM,mBAAmB,IAAI","debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 210, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user/Desktop/paw/src/app/components/TaskForm.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { Task, TaskPriority, TaskState } from '../types/Task';\r\nimport { UserStory } from '../types/UserStory';\r\nimport { taskService } from '../services/TaskService';\r\nimport { userStoryService } from '../services/UserStoryService';\r\n\r\ninterface TaskFormProps {\r\n  task?: Task | null;\r\n  onSubmit: () => void;\r\n  onCancel: () => void;\r\n}\r\n\r\nexport default function TaskForm({ \r\n  task, \r\n  onSubmit, \r\n  onCancel \r\n}: TaskFormProps) {\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [priority, setPriority] = useState<TaskPriority>(TaskPriority.MEDIUM);\r\n  const [state, setState] = useState<TaskState>(TaskState.TODO);\r\n  const [userStoryId, setUserStoryId] = useState('');\r\n  const [estimatedTime, setEstimatedTime] = useState(0);\r\n  const [userStories, setUserStories] = useState<UserStory[]>([]);\r\n\r\n  useEffect(() => {\r\n    // Load user stories for dropdown\r\n    const stories = userStoryService.getAllStories();\r\n    setUserStories(stories);\r\n\r\n    // Populate form if editing existing task\r\n    if (task) {\r\n      setName(task.name);\r\n      setDescription(task.description);\r\n      setPriority(task.priority);\r\n      setState(task.state);\r\n      setUserStoryId(task.userStoryId);\r\n      setEstimatedTime(task.estimatedTime);\r\n    }\r\n  }, [task]);\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    const taskToSave: Task = {\r\n      id: task?.id,\r\n      name,\r\n      description,\r\n      priority,\r\n      state,\r\n      userStoryId,\r\n      estimatedTime,\r\n      dateAdded: task?.dateAdded || new Date(),\r\n      dateStarted: task?.dateStarted,\r\n      dateCompleted: task?.dateCompleted,\r\n      assignedUser: task?.assignedUser\r\n    };\r\n\r\n    taskService.addTask(taskToSave);\r\n    onSubmit();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\">\r\n      <div className=\"mb-4\">\r\n        <label className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n          Nazwa Zadania\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n          required\r\n        />\r\n      </div>\r\n      \r\n      <div className=\"mb-4\">\r\n        <label className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n          Opis Zadania\r\n        </label>\r\n        <textarea\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n          required\r\n        />\r\n      </div>\r\n      \r\n      <div className=\"mb-4\">\r\n        <label className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n          Stan Zadania\r\n        </label>\r\n        <select\r\n          value={state}\r\n          onChange={(e) => setState(e.target.value as TaskState)}\r\n          className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n        >\r\n          {Object.values(TaskState).map(s => (\r\n            <option key={s} value={s}>{\r\n              s === TaskState.TODO ? 'Do zrobienia' : \r\n              s === TaskState.DOING ? 'W trakcie' : \r\n              'Zakończone'\r\n            }</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      \r\n      <div className=\"mb-4\">\r\n        <label className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n          Priorytet\r\n        </label>\r\n        <select\r\n          value={priority}\r\n          onChange={(e) => setPriority(e.target.value as TaskPriority)}\r\n          className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n        >\r\n          {Object.values(TaskPriority).map(p => (\r\n            <option key={p} value={p}>{p}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      \r\n      <div className=\"mb-4\">\r\n        <label className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n          Historyjka\r\n        </label>\r\n        <select\r\n          value={userStoryId}\r\n          onChange={(e) => setUserStoryId(e.target.value)}\r\n          className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n          required\r\n        >\r\n          <option value=\"\">Wybierz historyjkę</option>\r\n          {userStories.map(story => (\r\n            <option key={story.id} value={story.id}>{story.name}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      \r\n      <div className=\"mb-4\">\r\n        <label className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n          Przewidywany czas wykonania (godz.)\r\n        </label>\r\n        <input\r\n          type=\"number\"\r\n          value={estimatedTime}\r\n          onChange={(e) => setEstimatedTime(Number(e.target.value))}\r\n          className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n          min=\"0\"\r\n          required\r\n        />\r\n      </div>\r\n      \r\n      <div className=\"flex items-center justify-between\">\r\n        <button\r\n          type=\"submit\"\r\n          className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n        >\r\n          {task ? 'Aktualizuj Zadanie' : 'Dodaj Zadanie'}\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={onCancel}\r\n          className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n        >\r\n          Anuluj\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 502, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 508, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user/Desktop/paw/src/app/components/TaskDetail.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { Task, TaskState, UserRole } from '../types/Task';\r\nimport { taskService } from '../services/TaskService';\r\nimport { userStoryService } from '../services/UserStoryService';\r\n\r\ninterface TaskDetailProps {\r\n  taskId: string;\r\n  onClose: () => void;\r\n}\r\n\r\nexport default function TaskDetail({ taskId, onClose }: TaskDetailProps) {\r\n  const [task, setTask] = useState<Task | null>(null);\r\n  const [assignedUser, setAssignedUser] = useState<{\r\n    id: string;\r\n    name: string;\r\n    role: UserRole;\r\n  } | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchedTask = taskService.getTaskById(taskId);\r\n    if (fetchedTask) {\r\n      setTask(fetchedTask);\r\n      setAssignedUser(fetchedTask.assignedUser || null);\r\n    }\r\n  }, [taskId]);\r\n\r\n  if (!task) return null;\r\n\r\n  const userStory = userStoryService.getAllStories().find(story => story.id === task.userStoryId);\r\n\r\n  const handleAssignUser = () => {\r\n    const name = prompt('Podaj imię użytkownika:');\r\n    const role = prompt('Wybierz rolę (developer/devops):') as UserRole;\r\n\r\n    if (name && (role === UserRole.DEVELOPER || role === UserRole.DEVOPS)) {\r\n      const user = {\r\n        id: Math.random().toString(36).substr(2, 9),\r\n        name,\r\n        role\r\n      };\r\n\r\n      taskService.assignUserToTask(taskId, user);\r\n      \r\n      // Refresh task data\r\n      const updatedTask = taskService.getTaskById(taskId);\r\n      if (updatedTask) {\r\n        setTask(updatedTask);\r\n        setAssignedUser(updatedTask.assignedUser || null);\r\n      }\r\n    } else {\r\n      alert('Nieprawidłowe dane użytkownika');\r\n    }\r\n  };\r\n\r\n  const handleCompleteTask = () => {\r\n    if (task.state === TaskState.DOING && assignedUser) {\r\n      taskService.completeTask(taskId);\r\n      \r\n      // Refresh task data\r\n      const updatedTask = taskService.getTaskById(taskId);\r\n      if (updatedTask) {\r\n        setTask(updatedTask);\r\n      }\r\n    } else {\r\n      alert('Zadanie musi być w trakcie realizacji i mieć przypisanego użytkownika');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center\">\r\n      <div className=\"bg-white p-8 rounded-lg max-w-2xl w-full relative\">\r\n        <button \r\n          onClick={onClose} \r\n          className=\"absolute top-4 right-4 text-red-500 hover:text-red-700\"\r\n        >\r\n          Zamknij\r\n        </button>\r\n\r\n        <h2 className=\"text-2xl font-bold mb-4\">{task.name}</h2>\r\n\r\n        <div className=\"grid md:grid-cols-2 gap-4\">\r\n          <div>\r\n            <h3 className=\"font-semibold\">Opis:</h3>\r\n            <p>{task.description}</p>\r\n\r\n            <h3 className=\"font-semibold mt-4\">Priorytet:</h3>\r\n            <p>{task.priority}</p>\r\n\r\n            <h3 className=\"font-semibold mt-4\">Stan:</h3>\r\n            <p>{task.state}</p>\r\n          </div>\r\n\r\n          <div>\r\n            <h3 className=\"font-semibold\">Historyjka:</h3>\r\n            <p>{userStory?.name || 'Brak historyjki'}</p>\r\n\r\n            <h3 className=\"font-semibold mt-4\">Przewidywany czas:</h3>\r\n            <p>{task.estimatedTime} godz.</p>\r\n\r\n            <h3 className=\"font-semibold mt-4\">Daty:</h3>\r\n            <p>Dodano: {task.dateAdded.toLocaleString()}</p>\r\n            {task.dateStarted && <p>Rozpoczęto: {task.dateStarted.toLocaleString()}</p>}\r\n            {task.dateCompleted && <p>Zakończono: {task.dateCompleted.toLocaleString()}</p>}\r\n\r\n            <h3 className=\"font-semibold mt-4\">Przypisany użytkownik:</h3>\r\n            {assignedUser ? (\r\n              <p>{assignedUser.name} ({assignedUser.role})</p>\r\n            ) : (\r\n              <p>Nie przypisano</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-6 flex space-x-4\">\r\n          {!assignedUser && (\r\n            <button \r\n              onClick={handleAssignUser}\r\n              className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded\"\r\n            >\r\n              Przypisz użytkownika\r\n            </button>\r\n          )}\r\n\r\n          {task.state === TaskState.DOING && assignedUser && (\r\n            <button \r\n              onClick={handleCompleteTask}\r\n              className=\"bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded\"\r\n            >\r\n              Zakończ zadanie\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 796, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 802, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user/Desktop/paw/src/app/zadania/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { Task, TaskState } from '../types/Task';\r\nimport { taskService } from '../services/TaskService';\r\nimport TaskForm from '../components/TaskForm';\r\nimport TaskDetail from '../components/TaskDetail';\r\n\r\nexport default function TaskKanbanBoard() {\r\n  const [tasks, setTasks] = useState<Task[]>([]);\r\n  const [isFormVisible, setIsFormVisible] = useState(false);\r\n  const [editingTask, setEditingTask] = useState<Task | null>(null);\r\n  const [selectedTaskId, setSelectedTaskId] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    loadTasks();\r\n  }, []);\r\n\r\n  const loadTasks = () => {\r\n    const allTasks = taskService.getAllTasks();\r\n    setTasks(allTasks);\r\n  };\r\n\r\n  const handleCreateTask = () => {\r\n    setEditingTask(null);\r\n    setIsFormVisible(true);\r\n  };\r\n\r\n  const handleEditTask = (task: Task) => {\r\n    setEditingTask(task);\r\n    setIsFormVisible(true);\r\n  };\r\n\r\n  const handleDeleteTask = (id: string) => {\r\n    if (window.confirm('Czy na pewno chcesz usunąć to zadanie?')) {\r\n      taskService.deleteTask(id);\r\n      loadTasks();\r\n    }\r\n  };\r\n\r\n  const handleFormClose = () => {\r\n    setIsFormVisible(false);\r\n    setEditingTask(null);\r\n  };\r\n\r\n  const handleFormSubmit = () => {\r\n    loadTasks();\r\n    setIsFormVisible(false);\r\n    setEditingTask(null);\r\n  };\r\n\r\n  const todoTasks = tasks.filter(task => task.state === TaskState.TODO);\r\n  const doingTasks = tasks.filter(task => task.state === TaskState.DOING);\r\n  const doneTasks = tasks.filter(task => task.state === TaskState.DONE);\r\n\r\n  const renderTaskColumn = (tasks: Task[], title: string) => (\r\n    <div className=\"bg-gray-100 p-4 rounded-lg\">\r\n      <h2 className=\"text-xl font-bold mb-4\">{title}</h2>\r\n      {tasks.map(task => (\r\n        <div \r\n          key={task.id} \r\n          className=\"bg-white shadow-md rounded-lg p-4 mb-4 cursor-pointer hover:bg-gray-50\"\r\n          onClick={() => task.id && setSelectedTaskId(task.id)}\r\n        >\r\n          <div className=\"flex justify-between items-center\">\r\n            <h3 className=\"font-semibold\">{task.name}</h3>\r\n            <div className=\"flex space-x-2\">\r\n              <button \r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  handleEditTask(task);\r\n                }}\r\n                className=\"text-blue-500 hover:text-blue-700\"\r\n              >\r\n                Edytuj\r\n              </button>\r\n              <button \r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  handleDeleteTask(task.id!);\r\n                }}\r\n                className=\"text-red-500 hover:text-red-700\"\r\n              >\r\n                Usuń\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <p className=\"text-gray-600 mt-2\">{task.description}</p>\r\n          <div className=\"mt-2 flex justify-between\">\r\n            <span className={`\r\n              px-2 py-1 rounded text-xs\r\n              ${task.priority === 'high' ? 'bg-red-200 text-red-800' : \r\n                task.priority === 'medium' ? 'bg-yellow-200 text-yellow-800' : \r\n                'bg-green-200 text-green-800'}\r\n            `}>\r\n              {task.priority}\r\n            </span>\r\n            {task.assignedUser && (\r\n              <span className=\"text-sm text-gray-600\">\r\n                {task.assignedUser.name}\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8\">\r\n      <h1 className=\"text-3xl font-bold mb-6\">Zadania</h1>\r\n      \r\n      <button \r\n        onClick={handleCreateTask}\r\n        className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded mb-6\"\r\n      >\r\n        Dodaj nowe zadanie\r\n      </button>\r\n      \r\n      {isFormVisible && (\r\n        <TaskForm \r\n          task={editingTask} \r\n          onSubmit={handleFormSubmit} \r\n          onCancel={handleFormClose} \r\n        />\r\n      )}\r\n\r\n      {selectedTaskId && (\r\n        <TaskDetail \r\n          taskId={selectedTaskId} \r\n          onClose={() => setSelectedTaskId(null)} \r\n        />\r\n      )}\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n        {renderTaskColumn(todoTasks, 'Do zrobienia')}\r\n        {renderTaskColumn(doingTasks, 'W trakcie')}\r\n        {renderTaskColumn(doneTasks, 'Zakończone')}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1025, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1030, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user/Desktop/paw/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1032, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}