{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user/Desktop/paw/frontend/src/app/services/UserStoryService.ts"],"sourcesContent":["import { UserStory, CreateUserStoryDTO, UpdateUserStoryDTO } from '../types/UserStory';\r\n\r\nexport class UserStoryService {\r\n  private storageKey = 'userStories';\r\n\r\n  constructor() {\r\n    if (typeof window !== 'undefined') {\r\n      this.initializeStorage();\r\n    }\r\n  }\r\n\r\n  private initializeStorage(): void {\r\n    if (!localStorage.getItem(this.storageKey)) {\r\n      localStorage.setItem(this.storageKey, JSON.stringify([]));\r\n    }\r\n  }\r\n\r\n  getAllStories(): UserStory[] {\r\n    try {\r\n      if (typeof window === 'undefined') return [];\r\n      return JSON.parse(localStorage.getItem(this.storageKey) || '[]');\r\n    } catch (error) {\r\n      console.error('Error getting stories:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  getStoriesByState(state: UserStory['state']): UserStory[] {\r\n    const stories = this.getAllStories();\r\n    return stories.filter(story => story.state === state);\r\n  }\r\n\r\n  getStoriesByProject(projectId: string): UserStory[] {\r\n    const stories = this.getAllStories();\r\n    return stories.filter(story => story.project === projectId);\r\n  }\r\n\r\n  getStoryById(id: string): UserStory | null {\r\n    const stories = this.getAllStories();\r\n    return stories.find(story => story.id === id) || null;\r\n  }\r\n\r\n  createStory(storyData: CreateUserStoryDTO): UserStory | null {\r\n    try {\r\n      const stories = this.getAllStories();\r\n      const newStory: UserStory = {\r\n        ...storyData,\r\n        id: this.generateId(),\r\n        dateCreated: new Date().toISOString(),\r\n      };\r\n      \r\n      stories.push(newStory);\r\n      localStorage.setItem(this.storageKey, JSON.stringify(stories));\r\n      return newStory;\r\n    } catch (error) {\r\n      console.error('Error creating story:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  updateStory(id: string, storyData: UpdateUserStoryDTO): UserStory | null {\r\n    try {\r\n      const stories = this.getAllStories();\r\n      const index = stories.findIndex(story => story.id === id);\r\n      \r\n      if (index === -1) {\r\n        return null;\r\n      }\r\n      \r\n      const updatedStory = {\r\n        ...stories[index],\r\n        ...storyData,\r\n      };\r\n      \r\n      stories[index] = updatedStory;\r\n      localStorage.setItem(this.storageKey, JSON.stringify(stories));\r\n      return updatedStory;\r\n    } catch (error) {\r\n      console.error('Error updating story:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  deleteStory(id: string): boolean {\r\n    try {\r\n      const stories = this.getAllStories();\r\n      const filteredStories = stories.filter(story => story.id !== id);\r\n      \r\n      if (filteredStories.length === stories.length) {\r\n        return false; // Nothing was deleted\r\n      }\r\n      \r\n      localStorage.setItem(this.storageKey, JSON.stringify(filteredStories));\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Error deleting story:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private generateId(): string {\r\n    return Date.now().toString(36) + Math.random().toString(36).substring(2, 5);\r\n  }\r\n}\r\n\r\n// Create a singleton instance\r\nexport const userStoryService = new UserStoryService();"],"names":[],"mappings":";;;;AAEO,MAAM;IACH,aAAa,cAAc;IAEnC,aAAc;QACZ,wCAAmC;YACjC,IAAI,CAAC,iBAAiB;QACxB;IACF;IAEQ,oBAA0B;QAChC,IAAI,CAAC,aAAa,OAAO,CAAC,IAAI,CAAC,UAAU,GAAG;YAC1C,aAAa,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,SAAS,CAAC,EAAE;QACzD;IACF;IAEA,gBAA6B;QAC3B,IAAI;YACF,uCAAmC;;YAAS;YAC5C,OAAO,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,IAAI,CAAC,UAAU,KAAK;QAC7D,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0BAA0B;YACxC,OAAO,EAAE;QACX;IACF;IAEA,kBAAkB,KAAyB,EAAe;QACxD,MAAM,UAAU,IAAI,CAAC,aAAa;QAClC,OAAO,QAAQ,MAAM,CAAC,CAAA,QAAS,MAAM,KAAK,KAAK;IACjD;IAEA,oBAAoB,SAAiB,EAAe;QAClD,MAAM,UAAU,IAAI,CAAC,aAAa;QAClC,OAAO,QAAQ,MAAM,CAAC,CAAA,QAAS,MAAM,OAAO,KAAK;IACnD;IAEA,aAAa,EAAU,EAAoB;QACzC,MAAM,UAAU,IAAI,CAAC,aAAa;QAClC,OAAO,QAAQ,IAAI,CAAC,CAAA,QAAS,MAAM,EAAE,KAAK,OAAO;IACnD;IAEA,YAAY,SAA6B,EAAoB;QAC3D,IAAI;YACF,MAAM,UAAU,IAAI,CAAC,aAAa;YAClC,MAAM,WAAsB;gBAC1B,GAAG,SAAS;gBACZ,IAAI,IAAI,CAAC,UAAU;gBACnB,aAAa,IAAI,OAAO,WAAW;YACrC;YAEA,QAAQ,IAAI,CAAC;YACb,aAAa,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,SAAS,CAAC;YACrD,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,yBAAyB;YACvC,OAAO;QACT;IACF;IAEA,YAAY,EAAU,EAAE,SAA6B,EAAoB;QACvE,IAAI;YACF,MAAM,UAAU,IAAI,CAAC,aAAa;YAClC,MAAM,QAAQ,QAAQ,SAAS,CAAC,CAAA,QAAS,MAAM,EAAE,KAAK;YAEtD,IAAI,UAAU,CAAC,GAAG;gBAChB,OAAO;YACT;YAEA,MAAM,eAAe;gBACnB,GAAG,OAAO,CAAC,MAAM;gBACjB,GAAG,SAAS;YACd;YAEA,OAAO,CAAC,MAAM,GAAG;YACjB,aAAa,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,SAAS,CAAC;YACrD,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,yBAAyB;YACvC,OAAO;QACT;IACF;IAEA,YAAY,EAAU,EAAW;QAC/B,IAAI;YACF,MAAM,UAAU,IAAI,CAAC,aAAa;YAClC,MAAM,kBAAkB,QAAQ,MAAM,CAAC,CAAA,QAAS,MAAM,EAAE,KAAK;YAE7D,IAAI,gBAAgB,MAAM,KAAK,QAAQ,MAAM,EAAE;gBAC7C,OAAO,OAAO,sBAAsB;YACtC;YAEA,aAAa,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,SAAS,CAAC;YACrD,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,yBAAyB;YACvC,OAAO;QACT;IACF;IAEQ,aAAqB;QAC3B,OAAO,KAAK,GAAG,GAAG,QAAQ,CAAC,MAAM,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,SAAS,CAAC,GAAG;IAC3E;AACF;AAGO,MAAM,mBAAmB,IAAI","debugId":null}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user/Desktop/paw/frontend/src/app/components/StoryForm.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { UserStory, Priority, State, CreateUserStoryDTO } from '../types/UserStory';\r\nimport { userStoryService } from '../services/UserStoryService';\r\n\r\ninterface StoryFormProps {\r\n  story: UserStory | null;\r\n  onSubmit: () => void;\r\n  onCancel: () => void;\r\n}\r\n\r\nexport default function StoryForm({ story, onSubmit, onCancel }: StoryFormProps) {\r\n  const [formData, setFormData] = useState<CreateUserStoryDTO>({\r\n    name: '',\r\n    description: '',\r\n    priority: 'medium',\r\n    project: '',\r\n    state: 'todo',\r\n    ownerId: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (story) {\r\n      setFormData({\r\n        name: story.name,\r\n        description: story.description,\r\n        priority: story.priority,\r\n        project: story.project,\r\n        state: story.state,\r\n        ownerId: story.ownerId,\r\n      });\r\n    }\r\n  }, [story]);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (story) {\r\n      userStoryService.updateStory(story.id, formData);\r\n    } else {\r\n      userStoryService.createStory(formData);\r\n    }\r\n    \r\n    onSubmit();\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-100 p-6 rounded-lg mb-6\">\r\n      <h2 className=\"text-xl font-semibold mb-4\">\r\n        {story ? 'Edit Story' : 'Add New Story'}\r\n      </h2>\r\n      \r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"name\" className=\"block text-sm font-medium mb-1\">\r\n            Nazwa\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            value={formData.name}\r\n            onChange={handleChange}\r\n            className=\"w-full p-2 border rounded\"\r\n            required\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"description\" className=\"block text-sm font-medium mb-1\">\r\n            Komentarz\r\n          </label>\r\n          <textarea\r\n            id=\"description\"\r\n            name=\"description\"\r\n            value={formData.description}\r\n            onChange={handleChange}\r\n            className=\"w-full p-2 border rounded\"\r\n            rows={3}\r\n            required\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\r\n          <div>\r\n            <label htmlFor=\"priority\" className=\"block text-sm font-medium mb-1\">\r\n              Priorytet\r\n            </label>\r\n            <select\r\n              id=\"priority\"\r\n              name=\"priority\"\r\n              value={formData.priority}\r\n              onChange={handleChange}\r\n              className=\"w-full p-2 border rounded\"\r\n              required\r\n            >\r\n              <option value=\"low\">Low</option>\r\n              <option value=\"medium\">Medium</option>\r\n              <option value=\"high\">High</option>\r\n            </select>\r\n          </div>\r\n          \r\n          <div>\r\n            <label htmlFor=\"state\" className=\"block text-sm font-medium mb-1\">\r\n              Stan\r\n            </label>\r\n            <select\r\n              id=\"state\"\r\n              name=\"state\"\r\n              value={formData.state}\r\n              onChange={handleChange}\r\n              className=\"w-full p-2 border rounded\"\r\n              required\r\n            >\r\n              <option value=\"todo\">To Do</option>\r\n              <option value=\"doing\">Doing</option>\r\n              <option value=\"done\">Done</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\r\n          <div>\r\n            <label htmlFor=\"project\" className=\"block text-sm font-medium mb-1\">\r\n              Project ID\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"project\"\r\n              name=\"project\"\r\n              value={formData.project}\r\n              onChange={handleChange}\r\n              className=\"w-full p-2 border rounded\"\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <div>\r\n            <label htmlFor=\"ownerId\" className=\"block text-sm font-medium mb-1\">\r\n              Owner ID\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"ownerId\"\r\n              name=\"ownerId\"\r\n              value={formData.ownerId}\r\n              onChange={handleChange}\r\n              className=\"w-full p-2 border rounded\"\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"flex space-x-4\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded\"\r\n          >\r\n            Save\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onCancel}\r\n            className=\"bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded\"\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 473, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 479, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user/Desktop/paw/frontend/src/app/components/StoryCard.tsx"],"sourcesContent":["import { UserStory } from '../types/UserStory';\r\n\r\ninterface StoryCardProps {\r\n  story: UserStory;\r\n  onEdit: () => void;\r\n  onDelete: () => void;\r\n}\r\n\r\nexport default function StoryCard({ story, onEdit, onDelete }: StoryCardProps) {\r\n  const priorityClasses = {\r\n    low: 'border-l-4 border-blue-500',\r\n    medium: 'border-l-4 border-yellow-500',\r\n    high: 'border-l-4 border-red-500'\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString();\r\n  };\r\n\r\n  return (\r\n    <div className={`bg-white rounded shadow p-4 ${priorityClasses[story.priority]}`}>\r\n      <div className=\"flex justify-between items-start\">\r\n        <h3 className=\"font-semibold\">{story.name}</h3>\r\n        <span className={`text-xs px-2 py-1 rounded ${\r\n          story.priority === 'high' ? 'bg-red-100 text-red-800' : \r\n          story.priority === 'medium' ? 'bg-yellow-100 text-yellow-800' : \r\n          'bg-blue-100 text-blue-800'\r\n        }`}>\r\n          {story.priority.charAt(0).toUpperCase() + story.priority.slice(1)}\r\n        </span>\r\n      </div>\r\n      \r\n      <p className=\"text-sm text-gray-600 mt-2\">{story.description}</p>\r\n      \r\n      <div className=\"mt-3 text-xs text-gray-500\">\r\n        <p>Project: {story.project}</p>\r\n        <p>Owner: {story.ownerId}</p>\r\n        <p>Created: {formatDate(story.dateCreated)}</p>\r\n      </div>\r\n      \r\n      <div className=\"flex justify-end mt-4 space-x-2\">\r\n        <button \r\n          onClick={onEdit}\r\n          className=\"bg-blue-500 hover:bg-blue-600 text-white px-3 py-1 rounded text-xs\"\r\n        >\r\n          Edit\r\n        </button>\r\n        <button \r\n          onClick={onDelete}\r\n          className=\"bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded text-xs\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AAQe,SAAS,UAAU,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAkB;IAC3E,MAAM,kBAAkB;QACtB,KAAK;QACL,QAAQ;QACR,MAAM;IACR;IAEA,MAAM,aAAa,CAAC;QAClB,OAAO,IAAI,KAAK,YAAY,kBAAkB;IAChD;IAEA,qBACE,6LAAC;QAAI,WAAW,CAAC,4BAA4B,EAAE,eAAe,CAAC,MAAM,QAAQ,CAAC,EAAE;;0BAC9E,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAiB,MAAM,IAAI;;;;;;kCACzC,6LAAC;wBAAK,WAAW,CAAC,0BAA0B,EAC1C,MAAM,QAAQ,KAAK,SAAS,4BAC5B,MAAM,QAAQ,KAAK,WAAW,kCAC9B,6BACA;kCACC,MAAM,QAAQ,CAAC,MAAM,CAAC,GAAG,WAAW,KAAK,MAAM,QAAQ,CAAC,KAAK,CAAC;;;;;;;;;;;;0BAInE,6LAAC;gBAAE,WAAU;0BAA8B,MAAM,WAAW;;;;;;0BAE5D,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;;4BAAE;4BAAU,MAAM,OAAO;;;;;;;kCAC1B,6LAAC;;4BAAE;4BAAQ,MAAM,OAAO;;;;;;;kCACxB,6LAAC;;4BAAE;4BAAU,WAAW,MAAM,WAAW;;;;;;;;;;;;;0BAG3C,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBACC,SAAS;wBACT,WAAU;kCACX;;;;;;kCAGD,6LAAC;wBACC,SAAS;wBACT,WAAU;kCACX;;;;;;;;;;;;;;;;;;AAMT;KAhDwB","debugId":null}},
    {"offset": {"line": 608, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 614, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user/Desktop/paw/frontend/src/app/lib/ProjectApi.ts"],"sourcesContent":["// lib/ProjectApi.ts\r\nimport { \r\n  collection, \r\n  doc, \r\n  addDoc, \r\n  updateDoc, \r\n  deleteDoc, \r\n  getDocs, \r\n  getDoc, \r\n  query, \r\n  where, \r\n  serverTimestamp,\r\n  Timestamp \r\n} from 'firebase/firestore';\r\nimport { db, auth } from './firebase';\r\nimport { Project } from '../types/UserStory';\r\n\r\nexport class ProjectApi {\r\n  private static COLLECTION = 'projects';\r\n\r\n  // CREATE - Add a new project\r\n  static async createProject(nazwa: string, opis: string): Promise<Project> {\r\n    try {\r\n      // Ensure user is authenticated\r\n      const user = auth.currentUser;\r\n      if (!user) {\r\n        throw new Error('User must be authenticated to create a project');\r\n      }\r\n      \r\n      const projectData = {\r\n        nazwa,\r\n        opis,\r\n        ownerId: user.uid,\r\n        createdAt: serverTimestamp(),\r\n      };\r\n      \r\n      const docRef = await addDoc(collection(db, this.COLLECTION), projectData);\r\n      \r\n      return {\r\n        id: docRef.id,\r\n        nazwa,\r\n        opis,\r\n        ownerId: user.uid\r\n      };\r\n    } catch (error: any) {\r\n      console.error('Create project error:', error);\r\n      throw new Error(error.message || 'Failed to create project');\r\n    }\r\n  }\r\n\r\n  // READ - Get all projects for current user\r\n  static async getProjects(): Promise<Project[]> {\r\n    try {\r\n      // Ensure user is authenticated\r\n      const user = auth.currentUser;\r\n      if (!user) {\r\n        throw new Error('User must be authenticated to fetch projects');\r\n      }\r\n      \r\n      const projectsQuery = query(\r\n        collection(db, this.COLLECTION),\r\n        where('ownerId', '==', user.uid)\r\n      );\r\n      \r\n      const querySnapshot = await getDocs(projectsQuery);\r\n      const projects: Project[] = [];\r\n      \r\n      querySnapshot.forEach((doc) => {\r\n        const data = doc.data();\r\n        projects.push({\r\n          id: doc.id,\r\n          nazwa: data.nazwa,\r\n          opis: data.opis,\r\n          ownerId: data.ownerId\r\n        });\r\n      });\r\n      \r\n      return projects;\r\n    } catch (error: any) {\r\n      console.error('Get projects error:', error);\r\n      throw new Error(error.message || 'Failed to fetch projects');\r\n    }\r\n  }\r\n\r\n  // READ - Get project by ID (with owner check)\r\n  static async getProjectById(id: string): Promise<Project | null> {\r\n    try {\r\n      // Ensure user is authenticated\r\n      const user = auth.currentUser;\r\n      if (!user) {\r\n        throw new Error('User must be authenticated to fetch a project');\r\n      }\r\n      \r\n      const docRef = doc(db, this.COLLECTION, id);\r\n      const docSnap = await getDoc(docRef);\r\n      \r\n      if (!docSnap.exists()) {\r\n        return null;\r\n      }\r\n      \r\n      const data = docSnap.data();\r\n      \r\n      // Check if the project belongs to the current user\r\n      if (data.ownerId !== user.uid) {\r\n        return null; // Or throw an error if you prefer\r\n      }\r\n      \r\n      return {\r\n        id: docSnap.id,\r\n        nazwa: data.nazwa,\r\n        opis: data.opis,\r\n        ownerId: data.ownerId\r\n      };\r\n    } catch (error: any) {\r\n      console.error('Get project by ID error:', error);\r\n      throw new Error(error.message || 'Failed to fetch project');\r\n    }\r\n  }\r\n\r\n  // UPDATE - Update project\r\n  static async updateProject(id: string, nazwa: string, opis: string): Promise<Project | null> {\r\n    try {\r\n      // Ensure user is authenticated\r\n      const user = auth.currentUser;\r\n      if (!user) {\r\n        throw new Error('User must be authenticated to update a project');\r\n      }\r\n      \r\n      // First check if the project belongs to the user\r\n      const project = await this.getProjectById(id);\r\n      if (!project) {\r\n        return null;\r\n      }\r\n      \r\n      const docRef = doc(db, this.COLLECTION, id);\r\n      await updateDoc(docRef, {\r\n        nazwa,\r\n        opis,\r\n        updatedAt: serverTimestamp()\r\n      });\r\n      \r\n      return {\r\n        id,\r\n        nazwa,\r\n        opis,\r\n        ownerId: user.uid\r\n      };\r\n    } catch (error: any) {\r\n      console.error('Update project error:', error);\r\n      throw new Error(error.message || 'Failed to update project');\r\n    }\r\n  }\r\n\r\n  // DELETE - Delete project\r\n  static async deleteProject(id: string): Promise<boolean> {\r\n    try {\r\n      // Ensure user is authenticated\r\n      const user = auth.currentUser;\r\n      if (!user) {\r\n        throw new Error('User must be authenticated to delete a project');\r\n      }\r\n      \r\n      // First check if the project belongs to the user\r\n      const project = await this.getProjectById(id);\r\n      if (!project) {\r\n        return false;\r\n      }\r\n      \r\n      await deleteDoc(doc(db, this.COLLECTION, id));\r\n      return true;\r\n    } catch (error: any) {\r\n      console.error('Delete project error:', error);\r\n      throw new Error(error.message || 'Failed to delete project');\r\n    }\r\n  }\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 760, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 766, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user/Desktop/paw/frontend/src/app/lib/StoryApi.ts"],"sourcesContent":["import { \r\n  collection, \r\n  doc, \r\n  addDoc, \r\n  updateDoc, \r\n  deleteDoc, \r\n  getDocs, \r\n  getDoc, \r\n  query, \r\n  where, \r\n  serverTimestamp \r\n} from 'firebase/firestore';\r\nimport { db, auth } from './firebase';\r\nimport { UserStory, CreateUserStoryDTO, UpdateUserStoryDTO } from '../types/UserStory';\r\nimport { ProjectApi } from './ProjectApi';\r\n\r\nexport class StoryApi {\r\n  private static COLLECTION = 'stories';\r\n\r\n  // Create a new story\r\n  static async createStory(storyData: CreateUserStoryDTO): Promise<UserStory> {\r\n    try {\r\n      // Ensure user is authenticated\r\n      const user = auth.currentUser;\r\n      if (!user) {\r\n        throw new Error('User must be authenticated to create a story');\r\n      }\r\n      \r\n      // Verify project exists and belongs to the user\r\n      const project = await ProjectApi.getProjectById(storyData.project);\r\n      if (!project) {\r\n        throw new Error('Project not found or access denied');\r\n      }\r\n      \r\n      const newStory = {\r\n        ...storyData,\r\n        ownerId: user.uid,\r\n        dateCreated: serverTimestamp()\r\n      };\r\n      \r\n      const docRef = await addDoc(collection(db, this.COLLECTION), newStory);\r\n      \r\n      return {\r\n        id: docRef.id,\r\n        name: storyData.name,\r\n        description: storyData.description,\r\n        priority: storyData.priority,\r\n        project: storyData.project,\r\n        dateCreated: new Date().toISOString(), // For immediate client-side use\r\n        state: storyData.state,\r\n        ownerId: user.uid\r\n      };\r\n    } catch (error: any) {\r\n      console.error('Create story error:', error);\r\n      throw new Error(error.message || 'Failed to create story');\r\n    }\r\n  }\r\n\r\n  // Get all stories for a specific project (with owner check)\r\n  static async getStoriesByProject(projectId: string): Promise<UserStory[]> {\r\n    try {\r\n      // Ensure user is authenticated\r\n      const user = auth.currentUser;\r\n      if (!user) {\r\n        throw new Error('User must be authenticated to fetch stories');\r\n      }\r\n      \r\n      // Verify project exists and belongs to the user\r\n      const project = await ProjectApi.getProjectById(projectId);\r\n      if (!project) {\r\n        throw new Error('Project not found or access denied');\r\n      }\r\n      \r\n      const storiesQuery = query(\r\n        collection(db, this.COLLECTION),\r\n        where('project', '==', projectId),\r\n        where('ownerId', '==', user.uid)\r\n      );\r\n      \r\n      const querySnapshot = await getDocs(storiesQuery);\r\n      const stories: UserStory[] = [];\r\n      \r\n      querySnapshot.forEach((doc) => {\r\n        const data = doc.data();\r\n        stories.push({\r\n          id: doc.id,\r\n          name: data.name,\r\n          description: data.description,\r\n          priority: data.priority,\r\n          project: data.project,\r\n          dateCreated: data.dateCreated?.toDate?.() \r\n            ? data.dateCreated.toDate().toISOString() \r\n            : new Date().toISOString(),\r\n          state: data.state,\r\n          ownerId: data.ownerId\r\n        });\r\n      });\r\n      \r\n      return stories;\r\n    } catch (error: any) {\r\n      console.error('Get stories error:', error);\r\n      throw new Error(error.message || 'Failed to fetch stories');\r\n    }\r\n  }\r\n\r\n  // Get a story by ID (with owner check)\r\n  static async getStoryById(storyId: string): Promise<UserStory | null> {\r\n    try {\r\n      // Ensure user is authenticated\r\n      const user = auth.currentUser;\r\n      if (!user) {\r\n        throw new Error('User must be authenticated to fetch a story');\r\n      }\r\n      \r\n      const docRef = doc(db, this.COLLECTION, storyId);\r\n      const docSnap = await getDoc(docRef);\r\n      \r\n      if (!docSnap.exists()) {\r\n        return null;\r\n      }\r\n      \r\n      const data = docSnap.data();\r\n      \r\n      // Check if the story belongs to the current user\r\n      if (data.ownerId !== user.uid) {\r\n        return null;\r\n      }\r\n      \r\n      return {\r\n        id: docSnap.id,\r\n        name: data.name,\r\n        description: data.description,\r\n        priority: data.priority,\r\n        project: data.project,\r\n        dateCreated: data.dateCreated?.toDate?.() \r\n          ? data.dateCreated.toDate().toISOString() \r\n          : new Date().toISOString(),\r\n        state: data.state,\r\n        ownerId: data.ownerId\r\n      };\r\n    } catch (error: any) {\r\n      console.error('Get story by ID error:', error);\r\n      throw new Error(error.message || 'Failed to fetch story');\r\n    }\r\n  }\r\n\r\n  // Update a story\r\n  static async updateStory(storyId: string, storyData: UpdateUserStoryDTO): Promise<UserStory | null> {\r\n    try {\r\n      // Ensure user is authenticated\r\n      const user = auth.currentUser;\r\n      if (!user) {\r\n        throw new Error('User must be authenticated to update a story');\r\n      }\r\n      \r\n      // Get the existing story to check ownership\r\n      const existingStory = await this.getStoryById(storyId);\r\n      if (!existingStory) {\r\n        return null;\r\n      }\r\n      \r\n      // If project ID is changing, verify new project exists and belongs to user\r\n      if (storyData.project && storyData.project !== existingStory.project) {\r\n        const project = await ProjectApi.getProjectById(storyData.project);\r\n        if (!project) {\r\n          throw new Error('Project not found or access denied');\r\n        }\r\n      }\r\n      \r\n      const updateData = {\r\n        ...storyData,\r\n        updatedAt: serverTimestamp()\r\n      };\r\n      \r\n      const docRef = doc(db, this.COLLECTION, storyId);\r\n      await updateDoc(docRef, updateData);\r\n      \r\n      // Return updated story\r\n      return {\r\n        ...existingStory,\r\n        ...storyData\r\n      };\r\n    } catch (error: any) {\r\n      console.error('Update story error:', error);\r\n      throw new Error(error.message || 'Failed to update story');\r\n    }\r\n  }\r\n\r\n  // Delete a story\r\n  static async deleteStory(storyId: string): Promise<boolean> {\r\n    try {\r\n      // Ensure user is authenticated\r\n      const user = auth.currentUser;\r\n      if (!user) {\r\n        throw new Error('User must be authenticated to delete a story');\r\n      }\r\n      \r\n      // Get the existing story to check ownership\r\n      const existingStory = await this.getStoryById(storyId);\r\n      if (!existingStory) {\r\n        return false;\r\n      }\r\n      \r\n      await deleteDoc(doc(db, this.COLLECTION, storyId));\r\n      return true;\r\n    } catch (error: any) {\r\n      console.error('Delete story error:', error);\r\n      throw new Error(error.message || 'Failed to delete story');\r\n    }\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 940, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 946, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user/Desktop/paw/frontend/src/app/components/StoryList.tsx"],"sourcesContent":["// components/StoryList.tsx\r\nimport { UserStory } from '../types/UserStory';\r\nimport StoryCard from './StoryCard';\r\nimport { useEffect, useState } from 'react';\r\nimport { StoryApi } from '../lib/StoryApi';\r\nimport { auth } from '../lib/firebase';\r\nimport { onAuthStateChanged } from 'firebase/auth';\r\n\r\ninterface StoryListProps {\r\n  title: string;\r\n  projectId: string;\r\n  onEdit: (story: UserStory) => void;\r\n  onDelete: (id: string) => void;\r\n}\r\n\r\nexport default function StoryList({ title, projectId, onEdit, onDelete }: StoryListProps) {\r\n  const [stories, setStories] = useState<UserStory[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n      if (user && projectId) {\r\n        loadStories();\r\n      } else {\r\n        setStories([]);\r\n        setLoading(false);\r\n      }\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [projectId]);\r\n\r\n  const loadStories = async () => {\r\n    if (!projectId) return;\r\n    \r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const fetchedStories = await StoryApi.getStoriesByProject(projectId);\r\n      setStories(fetchedStories);\r\n    } catch (err: any) {\r\n      setError(err.message || 'Failed to load stories');\r\n      console.error('Error loading stories:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id: string) => {\r\n    try {\r\n      const success = await StoryApi.deleteStory(id);\r\n      if (success) {\r\n        setStories(stories.filter(story => story.id !== id));\r\n      }\r\n      onDelete(id);\r\n    } catch (err: any) {\r\n      console.error('Error deleting story:', err);\r\n      setError(err.message || 'Failed to delete story');\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"bg-gray-100 p-4 rounded-lg\">\r\n        <h2 className=\"text-xl font-semibold mb-4\">{title}</h2>\r\n        <p className=\"text-gray-500\">Loading stories...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"bg-gray-100 p-4 rounded-lg\">\r\n        <h2 className=\"text-xl font-semibold mb-4\">{title}</h2>\r\n        <p className=\"text-red-500\">{error}</p>\r\n        <button \r\n          onClick={loadStories}\r\n          className=\"mt-2 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\r\n        >\r\n          Retry\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-gray-100 p-4 rounded-lg\">\r\n      <h2 className=\"text-xl font-semibold mb-4\">{title}</h2>\r\n      \r\n      {stories.length === 0 ? (\r\n        <p className=\"text-gray-500 italic\">No stories</p>\r\n      ) : (\r\n        <div className=\"space-y-4\">\r\n          {stories.map(story => (\r\n            <StoryCard \r\n              key={story.id} \r\n              story={story} \r\n              onEdit={() => onEdit(story)} \r\n              onDelete={() => handleDelete(story.id)} \r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"AAAA,2BAA2B;;;;;AAE3B;AACA;AACA;AACA;AACA;AAAA;;;;;;;;AASe,SAAS,UAAU,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAkB;;IACtF,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe,EAAE;IACtD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACR,MAAM,cAAc,CAAA,GAAA,wNAAA,CAAA,qBAAkB,AAAD,EAAE,gIAAA,CAAA,OAAI;mDAAE,CAAC;oBAC5C,IAAI,QAAQ,WAAW;wBACrB;oBACF,OAAO;wBACL,WAAW,EAAE;wBACb,WAAW;oBACb;gBACF;;YAEA;uCAAO,IAAM;;QACf;8BAAG;QAAC;KAAU;IAEd,MAAM,cAAc;QAClB,IAAI,CAAC,WAAW;QAEhB,IAAI;YACF,WAAW;YACX,SAAS;YACT,MAAM,iBAAiB,MAAM,gIAAA,CAAA,WAAQ,CAAC,mBAAmB,CAAC;YAC1D,WAAW;QACb,EAAE,OAAO,KAAU;YACjB,SAAS,IAAI,OAAO,IAAI;YACxB,QAAQ,KAAK,CAAC,0BAA0B;QAC1C,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,eAAe,OAAO;QAC1B,IAAI;YACF,MAAM,UAAU,MAAM,gIAAA,CAAA,WAAQ,CAAC,WAAW,CAAC;YAC3C,IAAI,SAAS;gBACX,WAAW,QAAQ,MAAM,CAAC,CAAA,QAAS,MAAM,EAAE,KAAK;YAClD;YACA,SAAS;QACX,EAAE,OAAO,KAAU;YACjB,QAAQ,KAAK,CAAC,yBAAyB;YACvC,SAAS,IAAI,OAAO,IAAI;QAC1B;IACF;IAEA,IAAI,SAAS;QACX,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAG,WAAU;8BAA8B;;;;;;8BAC5C,6LAAC;oBAAE,WAAU;8BAAgB;;;;;;;;;;;;IAGnC;IAEA,IAAI,OAAO;QACT,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAG,WAAU;8BAA8B;;;;;;8BAC5C,6LAAC;oBAAE,WAAU;8BAAgB;;;;;;8BAC7B,6LAAC;oBACC,SAAS;oBACT,WAAU;8BACX;;;;;;;;;;;;IAKP;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAA8B;;;;;;YAE3C,QAAQ,MAAM,KAAK,kBAClB,6LAAC;gBAAE,WAAU;0BAAuB;;;;;qCAEpC,6LAAC;gBAAI,WAAU;0BACZ,QAAQ,GAAG,CAAC,CAAA,sBACX,6LAAC,yIAAA,CAAA,UAAS;wBAER,OAAO;wBACP,QAAQ,IAAM,OAAO;wBACrB,UAAU,IAAM,aAAa,MAAM,EAAE;uBAHhC,MAAM,EAAE;;;;;;;;;;;;;;;;AAU3B;GA3FwB;KAAA","debugId":null}},
    {"offset": {"line": 1125, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1131, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user/Desktop/paw/frontend/src/app/historyjki/page.tsx"],"sourcesContent":["// app/historyjki/page.tsx\r\n'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { UserStory } from '../types/UserStory';\r\nimport { StoryApi } from '../lib/StoryApi';\r\nimport StoryForm from '../components/StoryForm';\r\nimport StoryList from '../components/StoryList';\r\n\r\nexport default function HistoryjkiPage() {\r\n  const [stories, setStories] = useState<UserStory[]>([]);\r\n  const [editingStory, setEditingStory] = useState<UserStory | null>(null);\r\n  const [isFormVisible, setIsFormVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loadStories();\r\n  }, []);\r\n\r\n  const loadStories = () => {\r\n    const allStories = userStoryService.getAllStories();\r\n    setStories(allStories);\r\n  };\r\n\r\n  const handleCreateStory = () => {\r\n    setEditingStory(null);\r\n    setIsFormVisible(true);\r\n  };\r\n\r\n  const handleEditStory = (story: UserStory) => {\r\n    setEditingStory(story);\r\n    setIsFormVisible(true);\r\n  };\r\n\r\n  const handleDeleteStory = (id: string) => {\r\n    if (window.confirm('Are you sure you want to delete this story?')) {\r\n      userStoryService.deleteStory(id);\r\n      loadStories();\r\n    }\r\n  };\r\n\r\n  const handleFormClose = () => {\r\n    setIsFormVisible(false);\r\n    setEditingStory(null);\r\n  };\r\n\r\n  const handleFormSubmit = () => {\r\n    loadStories();\r\n    setIsFormVisible(false);\r\n    setEditingStory(null);\r\n  };\r\n\r\n  const todoStories = stories.filter(story => story.state === 'todo');\r\n  const doingStories = stories.filter(story => story.state === 'doing');\r\n  const doneStories = stories.filter(story => story.state === 'done');\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8\">\r\n      <h1 className=\"text-3xl font-bold mb-6\">Historyjki</h1>\r\n      \r\n      <button \r\n        onClick={handleCreateStory}\r\n        className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded mb-6\"\r\n      >\r\n        Dodaj nową historyjkę\r\n      </button>\r\n      \r\n      {isFormVisible && (\r\n        <StoryForm \r\n          story={editingStory} \r\n          onSubmit={handleFormSubmit} \r\n          onCancel={handleFormClose} \r\n        />\r\n      )}\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n        <StoryList \r\n          title=\"To Do\" \r\n          stories={todoStories} \r\n          onEdit={handleEditStory} \r\n          onDelete={handleDeleteStory} \r\n        />\r\n        \r\n        <StoryList \r\n          title=\"Doing\" \r\n          stories={doingStories} \r\n          onEdit={handleEditStory} \r\n          onDelete={handleDeleteStory} \r\n        />\r\n        \r\n        <StoryList \r\n          title=\"Done\" \r\n          stories={doneStories} \r\n          onEdit={handleEditStory} \r\n          onDelete={handleDeleteStory} \r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"AAAA,0BAA0B;;;;;AAG1B;AAGA;AACA;;;AANA;;;;AAQe,SAAS;;IACtB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe,EAAE;IACtD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAoB;IACnE,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR;QACF;mCAAG,EAAE;IAEL,MAAM,cAAc;QAClB,MAAM,aAAa,iBAAiB,aAAa;QACjD,WAAW;IACb;IAEA,MAAM,oBAAoB;QACxB,gBAAgB;QAChB,iBAAiB;IACnB;IAEA,MAAM,kBAAkB,CAAC;QACvB,gBAAgB;QAChB,iBAAiB;IACnB;IAEA,MAAM,oBAAoB,CAAC;QACzB,IAAI,OAAO,OAAO,CAAC,gDAAgD;YACjE,iBAAiB,WAAW,CAAC;YAC7B;QACF;IACF;IAEA,MAAM,kBAAkB;QACtB,iBAAiB;QACjB,gBAAgB;IAClB;IAEA,MAAM,mBAAmB;QACvB;QACA,iBAAiB;QACjB,gBAAgB;IAClB;IAEA,MAAM,cAAc,QAAQ,MAAM,CAAC,CAAA,QAAS,MAAM,KAAK,KAAK;IAC5D,MAAM,eAAe,QAAQ,MAAM,CAAC,CAAA,QAAS,MAAM,KAAK,KAAK;IAC7D,MAAM,cAAc,QAAQ,MAAM,CAAC,CAAA,QAAS,MAAM,KAAK,KAAK;IAE5D,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAA0B;;;;;;0BAExC,6LAAC;gBACC,SAAS;gBACT,WAAU;0BACX;;;;;;YAIA,+BACC,6LAAC,yIAAA,CAAA,UAAS;gBACR,OAAO;gBACP,UAAU;gBACV,UAAU;;;;;;0BAId,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,yIAAA,CAAA,UAAS;wBACR,OAAM;wBACN,SAAS;wBACT,QAAQ;wBACR,UAAU;;;;;;kCAGZ,6LAAC,yIAAA,CAAA,UAAS;wBACR,OAAM;wBACN,SAAS;wBACT,QAAQ;wBACR,UAAU;;;;;;kCAGZ,6LAAC,yIAAA,CAAA,UAAS;wBACR,OAAM;wBACN,SAAS;wBACT,QAAQ;wBACR,UAAU;;;;;;;;;;;;;;;;;;AAKpB;GAzFwB;KAAA","debugId":null}},
    {"offset": {"line": 1267, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}